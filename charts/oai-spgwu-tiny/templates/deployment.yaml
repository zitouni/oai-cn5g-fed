apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "oai-spgwu-tiny.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "oai-spgwu-tiny.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "oai-spgwu-tiny.selectorLabels" . | nindent 8 }}
      annotations:
        k8s.v1.cni.cncf.io/networks: >-
          [{
                 "name": "{{ .Chart.Name }}-{{ .Values.namespace }}-net1",
                 "default-route": ["{{ .Values.config.pgwuSgiGw }}"]
          }, 
          {       "name": "{{ .Chart.Name }}-{{ .Values.namespace }}-net2" 
          }]
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
      - name: tcpdump
        image: image-registry.openshift-image-registry.svc:5000/oai/tcpdump-internal:latest
        command:
          - /bin/sleep
          - infinity
      - name: spgwu
        image: "{{ .Values.image.repository }}:{{ .Values.image.version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
        ports:
        - containerPort: {{ .Values.service.pfcpPort }}
          name: oai-spgwu
        - containerPort: {{ .Values.service.gtpuPort }}
          name: s1u
        - containerPort: 5001
          name: iperf
        env:
          - name: PID_DIRECTORY
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: pidDirectory
          - name: SGW_INTERFACE_NAME_FOR_S1U_S12_S4_UP
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: sgwS1uIf
          - name: SGW_INTERFACE_NAME_FOR_SX
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: sgwSxIf
          - name: PGW_INTERFACE_NAME_FOR_SGI
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: pgwSgiIf
          - name: NETWORK_UE_IP
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: netUeIp
          - name: NETWORK_UE_NAT_OPTION
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: netUeNatOption
          - name: SPGWC0_IP_ADDRESS
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: spgwc0IpAdd
          - name: NRF_IPV4_ADDRESS
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: nrfIpv4Add
          - name: NRF_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: nrfPort
          - name: NRF_API_VERSION
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: nrfApiVersion
          - name: REGISTER_NRF
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: registerNRF
#        command:
#          - /bin/sleep
#          - infinity
        {{- with .Values.resources }}
        resources:
        {{- toYaml . | nindent 10 }}
        {{- end }}
      volumes:
        - name: {{ .Chart.Name }}-{{ .Values.namespace }}-pv
          persistentVolumeClaim:
            claimName: {{ .Chart.Name }}-{{ .Values.namespace }}-pvc   
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: {{ .Values.serviceAccount.name }}
      terminationGracePeriodSeconds: 15
      # RT worker
      nodeName: dedale.5glab.nsa.eurecom.fr

